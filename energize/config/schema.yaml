$defs:
  probability:
    type: number
    minimum: 0
    maximum: 1
  natural_number:
    type: integer
    minimum: 1
  data_splits:
    type: object
    properties:
      evo_train:
        $ref: "#/$defs/probability"
      evo_test:
        $ref: "#/$defs/probability"
      evo_validation:
        $ref: "#/$defs/probability"
    additionalProperties: False
    required:
    - evo_train
    - evo_test
  augmentation:
    type: object
    properties:
      train:
        oneOf:
          - type: object
          - type: 'null'
      test:
        oneOf:
          - type: object
          - type: 'null'
    required:
    - test

type: object
properties:
  checkpoints_path:
    type: string
  evolutionary:
    type: object
    properties:
      generations:
        $ref: "#/$defs/natural_number"
      lambda:
        $ref: "#/$defs/natural_number"
      max_epochs:
        $ref: "#/$defs/natural_number"
      mutation:
        type: object
        properties:
          add_connection:
            $ref: "#/$defs/probability"
          remove_connection:
            $ref: "#/$defs/probability"
          add_layer:
            $ref: "#/$defs/probability"
          reuse_layer:
            $ref: "#/$defs/probability"
          remove_layer:
            $ref: "#/$defs/probability"
          dsge_layer:
            $ref: "#/$defs/probability"
          macro_layer:
            $ref: "#/$defs/probability"
          train_longer:
            $ref: "#/$defs/probability"
        additionalProperties: False
        required:
        - add_connection
        - remove_connection
        - add_layer
        - reuse_layer
        - remove_layer
        - dsge_layer
        - macro_layer
        - train_longer
      fitness_metric:
        enum: ["accuracy", "loss"]
    additionalProperties: False
    required:
    - generations
    - lambda
    - max_epochs
    - mutation
    - fitness_metric
  network:
    type: object
    properties:
      architecture:
        type: object
        properties:
          reuse_layer:
            $ref: "#/$defs/probability"
          macro_structure:
            type: array
          output:
            type: string
          modules:
            type: array
            items:
              type: object
              properties:
                name:
                  type: string
                network_structure_init:
                  type: array
                  minItems: 1
                network_structure:
                  type: array
                  minItems: 2
                  maxItems: 2
                levels_back:
                  type: integer
              additionalProperties: False
              required:
              - network_structure_init
              - network_structure
              - levels_back
        additionalProperties: False
        required:
        - reuse_layer
        - macro_structure
        - output
        - modules
      learning:
        type: object
        properties:
          train_percentage:
            type: integer
            minimum: 1
            maximum: 100
          learning_type:
            enum: ["supervised"]
          default_train_time:
            type: integer
          data_splits:
            $ref: "#/$defs/data_splits"
          augmentation:
            $ref: "#/$defs/augmentation"
        if:
          properties:
            learning_type:
              const: "supervised"
        then:
          properties:
            data_splits:
              required:
              - evo_validation
            augmentation:
              required:
              - train
        required:
        - train_percentage
        - learning_type
        - default_train_time
        - data_splits
        - augmentation
    additionalProperties: False
    required:
    - architecture
    - learning
additionalProperties: False
required:
- checkpoints_path
- evolutionary
- network
